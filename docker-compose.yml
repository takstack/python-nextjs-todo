version: '3.8'

services:
  frontend:
    build: .
    ports:
      - "3000:3000"
    env_file: 
      - path: ./.env.local
      - required: true # default
    # environment:
    #   - NEXT_PUBLIC_API_URL=http://backend:8000
    #   - NODE_ENV=development
    develop:
      watch:
        - path: ./app
          action: sync
          target: /app/app
        - path: ./public
          action: sync
          target: /app/public
        - path: ./package.json
          action: rebuild
        - path: ./package-lock.json
          action: rebuild
    volumes:
      - .:/app
      - node_modules:/app/node_modules
      - /app/.next
    depends_on:
      - backend
    command: npm run dev

  backend:
    build: ./server
    ports:
      - "8000:8000"
    environment:
      - DATABASE_URL=postgresql://postgres:postgres@db:5432/todo
    develop:
      watch:
        - path: ./server
          action: sync
          target: /app
        - path: ./server/requirements.txt
          action: rebuild
    volumes:
      - ./server:/app
    depends_on:
      db:
        condition: service_healthy  # Wait for db to be healthy
    command: uvicorn main:app --host 0.0.0.0 --port 8000 --reload

  db:
    image: postgres:15-alpine
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=todo
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

  pgadmin:
    image: dpage/pgadmin4
    ports:
      - "5050:80"
    environment:
      - PGADMIN_DEFAULT_EMAIL=admin@admin.com
      - PGADMIN_DEFAULT_PASSWORD=admin
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    depends_on:
      - db

volumes:
  postgres_data: 
  node_modules:
  pgadmin_data: